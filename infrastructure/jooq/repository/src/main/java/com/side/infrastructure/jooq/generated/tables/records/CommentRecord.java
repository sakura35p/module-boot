/*
 * This file is generated by jOOQ.
 */
package com.side.infrastructure.jooq.generated.tables.records;


import com.side.infrastructure.jooq.generated.tables.Comment;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class CommentRecord extends UpdatableRecordImpl<CommentRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Create a detached CommentRecord
     */
    public CommentRecord() {
        super(Comment.COMMENT);
    }

    /**
     * Create a detached, initialised CommentRecord
     */
    public CommentRecord(Integer dislikes, Integer likes, Long boardId, Long id, String contents) {
        super(Comment.COMMENT);

        setDislikes(dislikes);
        setLikes(likes);
        setBoardId(boardId);
        setId(id);
        setContents(contents);
        resetChangedOnNotNull();
    }

    /**
     * Getter for <code>test_db.comment.dislikes</code>.
     */
    public Integer getDislikes() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>test_db.comment.dislikes</code>.
     */
    public void setDislikes(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>test_db.comment.likes</code>.
     */
    public Integer getLikes() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>test_db.comment.likes</code>.
     */
    public void setLikes(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>test_db.comment.board_id</code>.
     */
    public Long getBoardId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>test_db.comment.board_id</code>.
     */
    public void setBoardId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>test_db.comment.id</code>.
     */
    public Long getId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>test_db.comment.id</code>.
     */
    public void setId(Long value) {
        set(3, value);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>test_db.comment.contents</code>.
     */
    public String getContents() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Setter for <code>test_db.comment.contents</code>.
     */
    public void setContents(String value) {
        set(4, value);
    }

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }
}
