/*
 * This file is generated by jOOQ.
 */
package com.side.infrastructure.jooq.generated.tables.records;


import com.side.infrastructure.jooq.generated.tables.Notice;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class NoticeRecord extends UpdatableRecordImpl<NoticeRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Create a detached NoticeRecord
     */
    public NoticeRecord() {
        super(Notice.NOTICE);
    }

    /**
     * Create a detached, initialised NoticeRecord
     */
    public NoticeRecord(Integer dislikes, Integer likes, LocalDateTime createdAt, Long id, LocalDateTime modifiedAt, String createdBy, String modifiedBy, String title, String contents) {
        super(Notice.NOTICE);

        setDislikes(dislikes);
        setLikes(likes);
        setCreatedAt(createdAt);
        setId(id);
        setModifiedAt(modifiedAt);
        setCreatedBy(createdBy);
        setModifiedBy(modifiedBy);
        setTitle(title);
        setContents(contents);
        resetChangedOnNotNull();
    }

    /**
     * Getter for <code>test_db.notice.dislikes</code>.
     */
    public Integer getDislikes() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>test_db.notice.dislikes</code>.
     */
    public void setDislikes(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>test_db.notice.likes</code>.
     */
    public Integer getLikes() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>test_db.notice.likes</code>.
     */
    public void setLikes(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>test_db.notice.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>test_db.notice.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>test_db.notice.id</code>.
     */
    public Long getId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>test_db.notice.id</code>.
     */
    public void setId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>test_db.notice.modified_at</code>.
     */
    public LocalDateTime getModifiedAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>test_db.notice.modified_at</code>.
     */
    public void setModifiedAt(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>test_db.notice.created_by</code>.
     */
    public String getCreatedBy() {
        return (String) get(5);
    }

    /**
     * Setter for <code>test_db.notice.created_by</code>.
     */
    public void setCreatedBy(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>test_db.notice.modified_by</code>.
     */
    public String getModifiedBy() {
        return (String) get(6);
    }

    /**
     * Setter for <code>test_db.notice.modified_by</code>.
     */
    public void setModifiedBy(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>test_db.notice.title</code>.
     */
    public String getTitle() {
        return (String) get(7);
    }

    /**
     * Setter for <code>test_db.notice.title</code>.
     */
    public void setTitle(String value) {
        set(7, value);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>test_db.notice.contents</code>.
     */
    public String getContents() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Setter for <code>test_db.notice.contents</code>.
     */
    public void setContents(String value) {
        set(8, value);
    }

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }
}
